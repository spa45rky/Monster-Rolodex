{"version":3,"sources":["BubbleURL.js","App.js","reportWebVitals.js","index.js"],"names":["BubbleURL","props","items","displayItems","handleChange","name","id","value","displayText","progressCounter","useState","updatedArray","setUpdatedArray","selectedArray","setSelectedArray","className","easing","duration","loop","delay","translateX","scale","map","item","index","onClick","push","tempArr","_","remove","e","console","log","defaultChange","App","setState","searchField","target","state","monsters","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wXAoFeA,EAhFG,SAACC,GAAW,IAClBC,EAAyCD,EAAzCC,MAEFC,GAF2CF,EAAlCG,aAEMF,GAAS,CAC1B,CACIG,KAAM,aACNC,GAAI,EACJC,MAAO,eACPC,YAAa,gBAEjB,CACIH,KAAM,cACNC,GAAI,EACJC,MAAO,eACPC,YAAa,iBAEjB,CACIH,KAAM,cACNC,GAAI,EACJC,MAAO,eACPC,YAAa,iBAEjB,CACIH,KAAM,cACNC,GAAI,EACJC,MAAO,eACPC,YAAa,iBAEjB,CACIH,KAAM,cACNC,GAAI,EACJC,MAAO,gBACPC,YAAa,mBAhCI,GACwBP,EAApBQ,gBAqCWC,mBAASP,IAtCxB,mBAsClBQ,EAtCkB,KAsCJC,EAtCI,OAuCiBF,mBAAS,IAvC1B,mBAuClBG,EAvCkB,KAuCHC,EAvCG,KAmDzB,OACI,qBAAKC,UAAU,YAAf,SACI,cAAC,IAAD,CACIC,OAAO,iBACPC,SAAU,IACVC,MAAM,EACNC,MAAO,IACPC,WAAW,QACXC,MAAO,CAAC,IAAI,IANhB,SAUCV,EAAaW,KAAI,SAACC,EAAMC,GAAP,OACd,wBAEIC,QAAS,kBAzBH,SAACD,GACnBX,EAAca,KAAKf,EAAaa,GAAOlB,IACvCQ,EAAiBD,GACjB,IAAMc,EAAUC,IAAEC,OAAOlB,GAAc,SAAUmB,GAC7C,OAAOnB,EAAaa,GAAOlB,KAAOwB,EAAExB,MAExCM,EAAgBe,GAChBI,QAAQC,IAAInB,GAkBeoB,CAAcT,IAC7BT,UAAU,6BACVV,KAAMkB,EAAKlB,KACXC,GAAIiB,EAAKjB,GACTC,MAAOgB,EAAKhB,MANhB,SAQI,sBAAMQ,UAAU,WAAhB,SAA4BQ,EAAKf,eAP5BgB,WCRVU,E,kDAnDX,aAAe,IAAD,8BACV,gBAcJ9B,aAAe,SAAC0B,GACZ,EAAKK,SAAS,CAACC,YAAaN,EAAEO,OAAO9B,SAbrC,EAAK+B,MAAQ,CACTC,SAAU,GACVH,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACI,SAAUK,S,oBAOhD,WACI,OACA,8BAAK,cAAC,EAAD,U,GAtBKC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.cbdc6372.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport Anime, {anime} from 'react-anime'\r\n\r\nconst BubbleURL = (props) => {\r\n    const { items, handleChange, progressCounter } = props\r\n\r\n    const displayItems = items || [\r\n        {\r\n            name: 'empty_name',\r\n            id: 0,\r\n            value: 'empty_string',\r\n            displayText: 'default_text',\r\n        },\r\n        {\r\n            name: 'empty_name1',\r\n            id: 1,\r\n            value: 'empty_string',\r\n            displayText: 'default_text1',\r\n        },\r\n        {\r\n            name: 'empty_name2',\r\n            id: 2,\r\n            value: 'empty_string',\r\n            displayText: 'default_text2',\r\n        },\r\n        {\r\n            name: 'empty_name3',\r\n            id: 3,\r\n            value: 'empty_string',\r\n            displayText: 'default_text3',\r\n        },\r\n        {\r\n            name: 'empty_name4',\r\n            id: 4,\r\n            value: 'empty_string5',\r\n            displayText: 'default_text4',\r\n        },\r\n    ]\r\n\r\n    const countToFinish = progressCounter || 10\r\n\r\n    const [updatedArray, setUpdatedArray] = useState(displayItems)\r\n    const [selectedArray, setSelectedArray] = useState([])\r\n\r\n    const defaultChange = (index) => {\r\n        selectedArray.push(updatedArray[index].id)\r\n        setSelectedArray(selectedArray)\r\n        const tempArr = _.remove(updatedArray, function (e) {\r\n            return updatedArray[index].id !== e.id\r\n        })\r\n        setUpdatedArray(tempArr)\r\n        console.log(selectedArray)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Anime\r\n                easing='easeOutElastic'\r\n                duration={1000}\r\n                loop={true}\r\n                delay={1 * 240}\r\n                translateX='13rem'\r\n                scale={[.75,.9]}>\r\n\r\n\r\n\r\n            {updatedArray.map((item, index) => (\r\n                <button\r\n                    key={index}\r\n                    onClick={() => defaultChange(index)}\r\n                    className=\"bubble w-100 m-5 h-100 p-3\"\r\n                    name={item.name}\r\n                    id={item.id}\r\n                    value={item.value}\r\n                >\r\n                    <span className=\"url-text\">{item.displayText}</span>\r\n                </button>\r\n            ))}\r\n            </Anime>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BubbleURL\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/searchBox/searchbox.component';\nimport {TimePicker} from \"antd\";\nimport 'antd/dist/antd.css'\nimport moment from 'moment';\nimport BubbleURL from \"./BubbleURL\";\n\nclass App extends Component{\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}));\n    }\n\n    handleChange = (e) => {\n        this.setState({searchField: e.target.value})\n    }\n\n    render() {\n        return(\n        <div><BubbleURL/></div>\n        /*const {monsters, searchField} = this.state\n\n        const  filteredMonsters  = monsters.filter( monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        const format = 'HH:mm';\n\n        return(\n\n            <div className='App'>\n                <h1>Monsters Rolodex</h1>\n                <div className='m-5'>\n                <TimePicker\n                    className='time-picker'\n                    defaultValue={moment('10:00',format)}\n                    format={format}/>\n                </div>\n                <SearchBox\n                placeholder='search monsters'\n                handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        )*/\n        )}\n}\n\n\nexport default App\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}